# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Update Submodule
      run: git submodule update --init --recursive 
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Build
      run: |
        dotnet build ./src -c Release
    - name: Push Main
      run: |
        dotnet pack ./src/LightORM/LightORM.csproj -c Release -o publish
        dotnet nuget push 'publish/*.nupkg' -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --skip-duplicate
    - name: Push SqlServer Provider
      run: |
        dotnet pack ./src/Providers/LighrORM.Providers.SqlServer/LighrORM.Providers.SqlServer.csproj -c Release -o publish/SqlServer
        dotnet nuget push 'publish/SqlServer/*.nupkg' -s https://api.nuget.org/v3/index.json -k ${{secrets.PROVIDERS_KEY}} --skip-duplicate
    - name: Push MySql Provider
      run: |
        dotnet pack ./src/Providers/LighrORM.Providers.MySql/LighrORM.Providers.MySql.csproj -c Release -o publish/MySql
        dotnet nuget push 'publish/MySql/*.nupkg' -s https://api.nuget.org/v3/index.json -k ${{secrets.PROVIDERS_KEY}} --skip-duplicate
    - name: Push Oracle Provider
      run: |
        dotnet pack ./src/Providers/LighrORM.Providers.Oracle/LighrORM.Providers.Oracle.csproj -c Release -o publish/Oracle
        dotnet nuget push 'publish/Oracle/*.nupkg' -s https://api.nuget.org/v3/index.json -k ${{secrets.PROVIDERS_KEY}} --skip-duplicate
    - name: Push Sqlite Provider
      run: |
        dotnet pack ./src/Providers/LighrORM.Providers.Sqlite/LighrORM.Providers.Sqlite.csproj -c Release -o publish/Sqlite
        dotnet nuget push 'publish/Sqlite/*.nupkg' -s https://api.nuget.org/v3/index.json -k ${{secrets.PROVIDERS_KEY}} --skip-duplicate                
